{"version":3,"sources":["components/ArmyList.jsx","components/CollapsableHeader.js","components/SelectionCard.js","util/constants.js","data/data.js","components/SelectionPane.jsx","util/jsonUtils.js","components/UsageBarItem.js","components/UsageBar.js","components/ArmyBuildPane.jsx","App.js","serviceWorker.js","index.js"],"names":["Body","styled","div","ArmyList","Title","CollapsableHeader","title","children","useState","open","setOpen","onClick","SelectionCard","unit","name","cost","RANKS","FACTIONS","UPGRADE_TYPES","UNIT_TYPES","data","units","Commander","point_cost","rank","faction","type","upgrades_slots","restricted_upgrades","upgrades","Category","key","map","subitem","SelectionPane","curData","Object","keys","item","UsageBarItemBody","UsageBarItem","maxValue","iconUrl","currentValue","defaultProps","UsageBarBody","UsageBar","points","slots","Container","ArmyBuildPane","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8749c330.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n  flex-grow: 3;\n`;\n\nconst ArmyList = () => <Body />;\n\nexport default ArmyList;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Body = styled.div``;\n\nconst Title = styled.div`\n  border-bottom: 1px solid;\n`;\n\nconst CollapsableHeader = ({ title, children }) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Body onClick={() => setOpen(!open)}>\n      <Title>{title}</Title>\n\n      {open && <>{children}</>}\n    </Body>\n  );\n};\n\nCollapsableHeader.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n  title: PropTypes.string.isRequired\n};\n\nexport default CollapsableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n`;\n\nconst SelectionCard = ({ unit }) => {\n  const { name, cost } = unit; //todo temporary will need to expand deez props more when the comp grows into something usable\n  return (\n    <Body>\n      <p>{name}</p>\n      <p>{cost}</p>\n    </Body>\n  );\n};\n\nSelectionCard.propTypes = {\n  unit: PropTypes.object.isRequired\n};\n\nexport default SelectionCard;\n","export const RANKS = {\n  COMMANDER: \"Commander\",\n  OPERATIVE: \"Operative\",\n  CORPS: \"Corps\",\n  SPECIAL_FORCES: \"Special Forces\",\n  SUPPORT: \"Support\",\n  HEAVY: \"Heavy\"\n};\n\nexport const FACTIONS = {\n  REBEL: \"Rebel\",\n  IMPERIAL: \"Imperial\",\n  REPUBLIC: \"Republic\",\n  SEPARATIST: \"Separatist\"\n};\n\nexport const UPGRADE_TYPES = {\n  HEAVY_WEAPON: \"Heavy Weapon\",\n  PERSONNEL: \"Personnel\",\n  FORCE: \"Force\",\n  COMMAND: \"Command\",\n  HARDPOINT: \"Hardpoint\",\n  GEAR: \"Gear\",\n  GRENADES: \"Grenades\",\n  COMMS: \"Comms\",\n  PILOT: \"Pilot\",\n  TRAINING: \"Training\",\n  GENERATOR: \"Generator\",\n  ARMAMENT: \"Armament\",\n  CREW: \"Crew\"\n};\n\nexport const UNIT_TYPES = {\n  TROOPER: \"Trooper\",\n  EMPLACEMENT_TROOPER: \"Emplacement Trooper\",\n  CREATURE_TROOPER: \"Creature Trooper\",\n  DROID_TROOPER: \"Droid Trooper\",\n  GROUND_VEHICLE: \"Ground Vehicle\",\n  REPULSOR_VEHICLE: \"Repulsor Vehicle\"\n};\n","import { RANKS, UPGRADE_TYPES, FACTIONS, UNIT_TYPES } from \"../util/constants\";\n\nexport const data = {\n  units: {\n    [FACTIONS.REBEL]: {\n      Commander: [\n        {\n          name: \"Luke Skywalker\",\n          point_cost: 160,\n          rank: RANKS.COMMANDER,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.FORCE,\n            UPGRADE_TYPES.FORCE,\n            UPGRADE_TYPES.GEAR\n          ]\n        },\n        {\n          name: \"Leia Organa\",\n          point_cost: 90,\n          rank: RANKS.COMMANDER,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.COMMAND,\n            UPGRADE_TYPES.COMMAND,\n            UPGRADE_TYPES.GEAR\n          ]\n        }\n      ],\n      [RANKS.OPERATIVE]: [\n        {\n          name: \"Chewbacca\",\n          point_cost: 95,\n          rank: RANKS.OPERATIVE,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.GEAR\n          ]\n        }\n      ],\n      [RANKS.CORPS]: [\n        {\n          name: \"Rebel Troopers\",\n          point_cost: 40,\n          rank: RANKS.CORPS,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.HEAVY_WEAPON,\n            UPGRADE_TYPES.PERSONNEL,\n            UPGRADE_TYPES.GEAR,\n            UPGRADE_TYPES.GRENADES\n          ],\n          restricted_upgrades: []\n        }\n      ],\n      [RANKS.SPECIAL_FORCES]: [\n        {\n          name: \"Wookie Warriors\",\n          point_cost: 75,\n          rank: RANKS.SPECIAL_FORCES,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.HEAVY_WEAPON,\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.GEAR,\n            UPGRADE_TYPES.GRENADES\n          ],\n          restricted_upgrades: []\n        }\n      ],\n      [RANKS.SUPPORT]: [\n        {\n          name: \"AT-RT\",\n          point_cost: 55,\n          rank: RANKS.SUPPORT,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.GROUND_VEHICLE,\n          upgrades_slots: [UPGRADE_TYPES.HARDPOINT, UPGRADE_TYPES.COMMS],\n          restricted_upgrades: []\n        }\n      ],\n      [RANKS.HEAVY]: [\n        {\n          name: \"AirSpeeder\",\n          point_cost: 140,\n          rank: RANKS.HEAVY,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.REPULSOR_VEHICLE,\n          upgrades_slots: [\n            UPGRADE_TYPES.PILOT,\n            UPGRADE_TYPES.HARDPOINT,\n            UPGRADE_TYPES.COMMS\n          ],\n          restricted_upgrades: []\n        }\n      ]\n    }\n  },\n  upgrades: {}\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CollapsableHeader from \"./CollapsableHeader\";\nimport SelectionCard from \"./SelectionCard\";\n\nimport { getFaction } from \"../util/jsonUtils\";\n\nimport { FACTIONS } from \"../util/constants\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n  flex-grow: 1;\n  border-right: 0;\n`;\n\nconst Category = ({ title, units }) => (\n  <CollapsableHeader key={title} title={title}>\n    {units.map(subitem => (\n      <SelectionCard unit={subitem} key={subitem.name} />\n    ))}\n  </CollapsableHeader>\n);\n\nconst SelectionPane = () => {\n  const curData = getFaction(FACTIONS.REBEL);\n  return (\n    <Body>\n      {Object.keys(curData).map(item => (\n        <Category title={item} key={item} units={curData[item]} />\n      ))}\n    </Body>\n  );\n};\n\nexport default SelectionPane;\n","import {data} from \"../data/data\";\n\nexport const sum = (i, x) => i + x;\n\nexport const getFaction = factionName => data.units[factionName];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst UsageBarItemBody = styled.div`\n`;\n\nconst UsageBarItem = ({ name, iconUrl, maxValue, currentValue }) => (\n  <UsageBarItemBody>\n    {name}: {currentValue} / {maxValue}\n  </UsageBarItemBody>\n);\n\nUsageBarItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  iconUrl: PropTypes.string,\n  maxValue: PropTypes.number.isRequired,\n  currentValue: PropTypes.number.isRequired\n};\n\nUsageBarItem.defaultProps = {\n  maxValue: 0,\n  currentValue: 2\n};\n\nexport default UsageBarItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport UsageBarItem from \"./UsageBarItem\";\nimport { RANKS } from \"../util/constants\";\n\nconst UsageBarBody = styled.div`\n  grid-column: 1 / span 2;\n  border-style: solid;\n  border-width: 1px;\n  border-bottom: 0;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst UsageBar = ({\n  points,\n  slots\n}) => (\n  <UsageBarBody>\n    <UsageBarItem name={\"Points\"} currentValue={points} maxValue={800} />\n    {/*TODO: Points may need diff styling/ comp*/}\n    <UsageBarItem\n      name={RANKS.COMMANDER}\n      currentValue={slots[RANKS.COMMANDER]}\n      maxValue={2}\n    />\n    <UsageBarItem\n      name={RANKS.OPERATIVE}\n      currentValue={slots[RANKS.OPERATIVE]}\n      maxValue={2}\n    />\n    <UsageBarItem\n      name={RANKS.SPECIAL_FORCES}\n      currentValue={slots[RANKS.SPECIAL_FORCES]}\n      maxValue={3}\n    />\n    <UsageBarItem\n      name={RANKS.CORPS}\n      currentValue={slots[RANKS.CORPS]}\n      maxValue={6}\n    />\n    <UsageBarItem\n      name={RANKS.SUPPORT}\n      currentValue={slots[RANKS.SUPPORT]}\n      maxValue={3}\n    />\n    <UsageBarItem \n        name={RANKS.HEAVY} \n        currentValue={slots[RANKS.HEAVY]} \n        maxValue={2} \n    />\n  </UsageBarBody>\n);\n\nUsageBar.propTypes = {\n  points: PropTypes.number.isRequired,\n  slots: PropTypes.shape({\n    [RANKS.COMMANDER]: PropTypes.number.isRequired,\n    [RANKS.OPERATIVE]: PropTypes.number.isRequired,\n    [RANKS.SPECIAL_FORCES]: PropTypes.number.isRequired,\n    [RANKS.CORPS]: PropTypes.number.isRequired,\n    [RANKS.SUPPORT]: PropTypes.number.isRequired,\n    [RANKS.HEAVY]: PropTypes.number.isRequired\n  })\n};\n\nUsageBar.defaultProps = {\n  points: 0,\n  slots: {\n    [RANKS.COMMANDER]: 0,\n    [RANKS.OPERATIVE]: 0,\n    [RANKS.SPECIAL_FORCES]: 0,\n    [RANKS.CORPS]: 0,\n    [RANKS.SUPPORT]: 0,\n    [RANKS.HEAVY]: 0\n  }\n};\n\nexport default UsageBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport ArmyList from \"./ArmyList\";\nimport SelectionPane from \"./SelectionPane\";\nimport UsageBar from \"./UsageBar\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 33% 66%\n    grid-template-rows: 10% 90%;\n    height: 70vh;\n    margin: 30px\n`;\n\nconst ArmyBuildPane = () => (\n  <Container>\n    <UsageBar />\n    <SelectionPane />\n    <ArmyList />\n  </Container>\n);\n\nexport default ArmyBuildPane;\n","import React from \"react\";\n\nimport ArmyBuildPane from \"./components/ArmyBuildPane\";\n\nconst App = () => <ArmyBuildPane />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}