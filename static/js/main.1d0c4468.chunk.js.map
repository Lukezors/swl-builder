{"version":3,"sources":["components/UpgradeButton.js","components/UnitCard.js","components/ArmyList.jsx","components/CollapsableHeader.js","components/SelectionCard.js","components/SelectionPane.jsx","components/UsageBarItem.js","util/constants.js","components/UsageBar.js","data/data.js","util/jsonUtils.js","components/ArmyBuildPane.jsx","App.js","serviceWorker.js","index.js"],"names":["UpgradeButton","type","onClick","e","stopPropagation","alert","Body","styled","div","UpgradeBar","RemoveButton","button","UnitCard","unit","deleteFunction","index","name","upgrades_slots","map","ArmyList","factionUnits","removeFunction","Object","keys","key","Title","CollapsableHeader","title","children","useState","open","setOpen","AddButton","SelectionCard","addFunction","point_cost","Category","units","addFunc","subitem","SelectionPane","item","UsageBarItemBody","UsageBarItem","maxValue","iconUrl","currentValue","defaultProps","RANKS","FACTIONS","UPGRADE_TYPES","UNIT_TYPES","UsageBarBody","UsageBar","usage","points","slots","PropTypes","shape","data","Commander","rank","faction","restricted_upgrades","upgrades","calculateUsage","unitList","currentUnit","forEach","Container","ArmyBuildPane","factionName","setUnitList","listIndex","setListIndex","remaining","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d0c4468.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst UpgradeButton = ({ type }) => {\n  return (\n    <button\n      onClick={e => {\n        // e.preventDefault();\n        e.stopPropagation();\n        alert(`todo: Add a ${type} upgrade`);\n      }}\n    >\n      {type}\n    </button>\n  );\n};\n\nUpgradeButton.propTypes = {\n  type: PropTypes.string\n};\n\nexport default UpgradeButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport UpgradeButton from \"./UpgradeButton\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n`;\n\nconst UpgradeBar = styled.div`\n  display: flex;\n`;\n\nconst RemoveButton = styled.button`\n  float: right;\n`;\n\nconst UnitCard = ({ unit, deleteFunction, index }) => {\n  const { name, upgrades_slots } = unit;\n  return (\n    <Body>\n      <p>\n        {name}\n        <RemoveButton\n          onClick={() => {\n            deleteFunction(index);\n          }}\n        >\n          X{\" \"}\n        </RemoveButton>\n      </p>\n      <UpgradeBar>\n        {upgrades_slots.map(name => (\n          <UpgradeButton type={name} />\n        ))}\n      </UpgradeBar>\n    </Body>\n  );\n};\n\nUnitCard.propTypes = {\n  unit: PropTypes.object.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n  index: PropTypes.string\n};\n\nexport default UnitCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport UnitCard from \"./UnitCard\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n  flex-grow: 3;\n`;\n\nconst ArmyList = ({factionUnits, removeFunction}) => <Body>\n    {Object.keys(factionUnits).map(key => (\n        <UnitCard unit={factionUnits[key]} key={key} deleteFunction={removeFunction} index={key}/>\n    ))}\n\n</Body>;\n\n\nArmyList.propTypes = {\n    factionUnits: PropTypes.object,\n    removeFunction: PropTypes.func\n};\n\nexport default ArmyList;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Body = styled.div``;\n\nconst Title = styled.div`\n  border-bottom: 1px solid;\n`;\n\nconst CollapsableHeader = ({ title, children }) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Body onClick={() => setOpen(!open)}>\n      <Title>{title}</Title>\n\n      {open && <>{children}</>}\n    </Body>\n  );\n};\n\nCollapsableHeader.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n  title: PropTypes.string.isRequired\n};\n\nexport default CollapsableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n`;\n\nconst AddButton = styled.button`\n  float: right;\n`;\n\nconst SelectionCard = ({ unit, addFunction }) => {\n  const { name, point_cost } = unit; //todo temporary will need to expand deez props more when the comp grows into something usable\n  return (\n    <Body>\n      <p>\n        {name}\n        <AddButton\n          onClick={e => {\n            e.stopPropagation();\n            addFunction(unit);\n          }}\n        >\n          +\n        </AddButton>\n      </p>\n      <p>{point_cost}</p>\n    </Body>\n  );\n};\n\nSelectionCard.propTypes = {\n  unit: PropTypes.object.isRequired,\n  addFunction: PropTypes.func\n};\n\nexport default SelectionCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport CollapsableHeader from \"./CollapsableHeader\";\nimport SelectionCard from \"./SelectionCard\";\n\nconst Body = styled.div`\n  border-style: solid;\n  border-width: 1px;\n  flex-grow: 1;\n  border-right: 0;\n`;\n\nconst Category = ({ title, units, addFunc }) => (\n  <CollapsableHeader key={title} title={title}>\n    {units.map(subitem => (\n      <SelectionCard unit={subitem} key={subitem.name} addFunction={addFunc}/>\n    ))}\n  </CollapsableHeader>\n);\n\nconst SelectionPane = ({factionUnits, addFunction}) => {\n  return (\n    <Body>\n      {Object.keys(factionUnits).map(item => (\n        <Category title={item} key={item} units={factionUnits[item]} addFunc={addFunction} />\n      ))}\n    </Body>\n  );\n};\n\nSelectionPane.propTypes = {\n  factionUnits: PropTypes.object,\n  addFunction: PropTypes.func\n};\n\nexport default SelectionPane;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst UsageBarItemBody = styled.div`\n`;\n\nconst UsageBarItem = ({ name, iconUrl, maxValue, currentValue }) => (\n  <UsageBarItemBody>\n    {name}: {currentValue} / {maxValue}\n  </UsageBarItemBody>\n);\n\nUsageBarItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  iconUrl: PropTypes.string,\n  maxValue: PropTypes.number.isRequired,\n  currentValue: PropTypes.number.isRequired\n};\n\nUsageBarItem.defaultProps = {\n  maxValue: 0,\n  currentValue: 2\n};\n\nexport default UsageBarItem;\n","export const RANKS = {\n  COMMANDER: \"Commander\",\n  OPERATIVE: \"Operative\",\n  CORPS: \"Corps\",\n  SPECIAL_FORCES: \"Special Forces\",\n  SUPPORT: \"Support\",\n  HEAVY: \"Heavy\"\n};\n\nexport const FACTIONS = {\n  REBEL: \"Rebel\",\n  IMPERIAL: \"Imperial\",\n  REPUBLIC: \"Republic\",\n  SEPARATIST: \"Separatist\"\n};\n\nexport const UPGRADE_TYPES = {\n  HEAVY_WEAPON: \"Heavy Weapon\",\n  PERSONNEL: \"Personnel\",\n  FORCE: \"Force\",\n  COMMAND: \"Command\",\n  HARDPOINT: \"Hardpoint\",\n  GEAR: \"Gear\",\n  GRENADES: \"Grenades\",\n  COMMS: \"Comms\",\n  PILOT: \"Pilot\",\n  TRAINING: \"Training\",\n  GENERATOR: \"Generator\",\n  ARMAMENT: \"Armament\",\n  CREW: \"Crew\"\n};\n\nexport const UNIT_TYPES = {\n  TROOPER: \"Trooper\",\n  EMPLACEMENT_TROOPER: \"Emplacement Trooper\",\n  CREATURE_TROOPER: \"Creature Trooper\",\n  DROID_TROOPER: \"Droid Trooper\",\n  GROUND_VEHICLE: \"Ground Vehicle\",\n  REPULSOR_VEHICLE: \"Repulsor Vehicle\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport UsageBarItem from \"./UsageBarItem\";\nimport { RANKS } from \"../util/constants\";\n\nconst UsageBarBody = styled.div`\n  grid-column: 1 / span 2;\n  border-style: solid;\n  border-width: 1px;\n  border-bottom: 0;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst UsageBar = ({usage}) => {\n    const { points, slots } = usage;\n    return (\n        <UsageBarBody>\n            <UsageBarItem name={\"Points\"} currentValue={points} maxValue={800} />\n            {/*TODO: Points may need diff styling/ comp*/}\n            <UsageBarItem\n                name={RANKS.COMMANDER}\n                currentValue={slots[RANKS.COMMANDER]}\n                maxValue={2}\n            />\n            <UsageBarItem\n                name={RANKS.OPERATIVE}\n                currentValue={slots[RANKS.OPERATIVE]}\n                maxValue={2}\n            />\n            <UsageBarItem\n                name={RANKS.SPECIAL_FORCES}\n                currentValue={slots[RANKS.SPECIAL_FORCES]}\n                maxValue={3}\n            />\n            <UsageBarItem\n                name={RANKS.CORPS}\n                currentValue={slots[RANKS.CORPS]}\n                maxValue={6}\n            />\n            <UsageBarItem\n                name={RANKS.SUPPORT}\n                currentValue={slots[RANKS.SUPPORT]}\n                maxValue={3}\n            />\n            <UsageBarItem\n                name={RANKS.HEAVY}\n                currentValue={slots[RANKS.HEAVY]}\n                maxValue={2}\n            />\n        </UsageBarBody>\n    );\n};\n\nUsageBar.propTypes = {\n  usage: PropTypes.shape({\n    points: PropTypes.number.isRequired,\n    slots: PropTypes.shape({\n      [RANKS.COMMANDER]: PropTypes.number.isRequired,\n      [RANKS.OPERATIVE]: PropTypes.number.isRequired,\n      [RANKS.SPECIAL_FORCES]: PropTypes.number.isRequired,\n      [RANKS.CORPS]: PropTypes.number.isRequired,\n      [RANKS.SUPPORT]: PropTypes.number.isRequired,\n      [RANKS.HEAVY]: PropTypes.number.isRequired\n    })\n  })\n};\n\nUsageBar.defaultProps = {\n    usage: PropTypes.shape({\n        points: 0,\n        slots: {\n            [RANKS.COMMANDER]: 0,\n            [RANKS.OPERATIVE]: 0,\n            [RANKS.SPECIAL_FORCES]: 0,\n            [RANKS.CORPS]: 0,\n            [RANKS.SUPPORT]: 0,\n            [RANKS.HEAVY]: 0\n        }\n    })\n};\n\nexport default UsageBar;\n","import { RANKS, UPGRADE_TYPES, FACTIONS, UNIT_TYPES } from \"../util/constants\";\n\nexport const data = {\n  units: {\n    [FACTIONS.REBEL]: {\n      Commander: [\n        {\n          name: \"Luke Skywalker\",\n          point_cost: 160,\n          rank: RANKS.COMMANDER,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.FORCE,\n            UPGRADE_TYPES.FORCE,\n            UPGRADE_TYPES.GEAR\n          ]\n        },\n        {\n          name: \"Leia Organa\",\n          point_cost: 90,\n          rank: RANKS.COMMANDER,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.COMMAND,\n            UPGRADE_TYPES.COMMAND,\n            UPGRADE_TYPES.GEAR\n          ]\n        }\n      ],\n      [RANKS.OPERATIVE]: [\n        {\n          name: \"Chewbacca\",\n          point_cost: 95,\n          rank: RANKS.OPERATIVE,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.GEAR\n          ]\n        }\n      ],\n      [RANKS.CORPS]: [\n        {\n          name: \"Rebel Troopers\",\n          point_cost: 40,\n          rank: RANKS.CORPS,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.HEAVY_WEAPON,\n            UPGRADE_TYPES.PERSONNEL,\n            UPGRADE_TYPES.GEAR,\n            UPGRADE_TYPES.GRENADES\n          ],\n          restricted_upgrades: []\n        }\n      ],\n      [RANKS.SPECIAL_FORCES]: [\n        {\n          name: \"Wookie Warriors\",\n          point_cost: 75,\n          rank: RANKS.SPECIAL_FORCES,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.TROOPER,\n          upgrades_slots: [\n            UPGRADE_TYPES.HEAVY_WEAPON,\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.TRAINING,\n            UPGRADE_TYPES.GEAR,\n            UPGRADE_TYPES.GRENADES\n          ],\n          restricted_upgrades: []\n        }\n      ],\n      [RANKS.SUPPORT]: [\n        {\n          name: \"AT-RT\",\n          point_cost: 55,\n          rank: RANKS.SUPPORT,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.GROUND_VEHICLE,\n          upgrades_slots: [UPGRADE_TYPES.HARDPOINT, UPGRADE_TYPES.COMMS],\n          restricted_upgrades: []\n        }\n      ],\n      [RANKS.HEAVY]: [\n        {\n          name: \"AirSpeeder\",\n          point_cost: 140,\n          rank: RANKS.HEAVY,\n          faction: FACTIONS.REBEL,\n          type: UNIT_TYPES.REPULSOR_VEHICLE,\n          upgrades_slots: [\n            UPGRADE_TYPES.PILOT,\n            UPGRADE_TYPES.HARDPOINT,\n            UPGRADE_TYPES.COMMS\n          ],\n          restricted_upgrades: []\n        }\n      ]\n    }\n  },\n  upgrades: {}\n};\n","import {data} from \"../data/data\";\nimport {RANKS} from \"./constants\";\n\nexport const sum = (i, x) => i + x;\n\nexport const getFaction = factionName => data.units[factionName];\n\nexport const calculateUsage = (unitList) => {\n    let usage = {\n        points: 0,\n        slots: {\n            [RANKS.COMMANDER]: 0,\n            [RANKS.OPERATIVE]: 0,\n            [RANKS.CORPS]: 0,\n            [RANKS.SPECIAL_FORCES]: 0,\n            [RANKS.SUPPORT]: 0,\n            [RANKS.HEAVY]: 0,\n        }\n    };\n\n    let currentUnit;\n    Object.keys(unitList).forEach(key => {\n        currentUnit = unitList[key];\n        usage.points += currentUnit.point_cost;\n        usage.slots[currentUnit.rank]++;\n    });\n\n    return usage;\n};\n\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport ArmyList from \"./ArmyList\";\nimport SelectionPane from \"./SelectionPane\";\nimport UsageBar from \"./UsageBar\";\n\nimport { getFaction, calculateUsage } from \"../util/jsonUtils\";\nimport {FACTIONS} from \"../util/constants\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 33% 66%\n    grid-template-rows: 10% 90%;\n    height: 70vh;\n    margin: 30px\n`;\n\nconst ArmyBuildPane = () => {\n  const [unitList, setUnitList] = useState({});\n  const [listIndex, setListIndex] = useState(1);\n\n  const addUnit = unit => {\n    setUnitList({\n      ...unitList,\n      [listIndex]: unit\n    });\n    setListIndex(listIndex + 1);\n  };\n  const removeUnit = index => {\n    const {[index]: removedValue, ...remaining} = unitList;\n    setUnitList(\n      remaining\n    );\n  };\n  return (\n    <Container>\n      <UsageBar usage={calculateUsage(unitList)} />\n      <SelectionPane\n        addFunction={addUnit}\n        factionUnits={getFaction(FACTIONS.REBEL)}\n      />\n      <ArmyList removeFunction={removeUnit} factionUnits={unitList} />\n    </Container>\n  );\n};\n\nexport default ArmyBuildPane;\n","import React from \"react\";\n\nimport ArmyBuildPane from \"./components/ArmyBuildPane\";\n\nconst App = () => <ArmyBuildPane />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}